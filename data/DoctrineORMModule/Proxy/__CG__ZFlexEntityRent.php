<?php

namespace DoctrineORMModule\Proxy\__CG__\ZFlex\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Rent extends \ZFlex\Entity\Rent implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'username', 'password', 'description', 'rent_times', 'sum_money', 'status', 'category', 'rent_time', 'is_giahan', 'time_created', 'customer', 'history_rent', 'history_rent_boss', 'report_rent');
        }

        return array('__isInitialized__', 'id', 'username', 'password', 'description', 'rent_times', 'sum_money', 'status', 'category', 'rent_time', 'is_giahan', 'time_created', 'customer', 'history_rent', 'history_rent_boss', 'report_rent');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Rent $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsGiaHan($is_giahan)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsGiaHan', array($is_giahan));

        return parent::setIsGiaHan($is_giahan);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsGiaHan()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsGiaHan', array());

        return parent::getIsGiaHan();
    }

    /**
     * {@inheritDoc}
     */
    public function setRentTimes($rent_times)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRentTimes', array($rent_times));

        return parent::setRentTimes($rent_times);
    }

    /**
     * {@inheritDoc}
     */
    public function getRentTimes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRentTimes', array());

        return parent::getRentTimes();
    }

    /**
     * {@inheritDoc}
     */
    public function setSumMoney($sum_money)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSumMoney', array($sum_money));

        return parent::setSumMoney($sum_money);
    }

    /**
     * {@inheritDoc}
     */
    public function getSumMoney()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSumMoney', array());

        return parent::getSumMoney();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setRentTime($rent_time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRentTime', array($rent_time));

        return parent::setRentTime($rent_time);
    }

    /**
     * {@inheritDoc}
     */
    public function getRentTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRentTime', array());

        return parent::getRentTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimeCreated($time_created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimeCreated', array($time_created));

        return parent::setTimeCreated($time_created);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeCreated', array());

        return parent::getTimeCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer($customer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', array($customer));

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', array());

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setHistoryRent($history_rent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHistoryRent', array($history_rent));

        return parent::setHistoryRent($history_rent);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistoryRent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistoryRent', array());

        return parent::getHistoryRent();
    }

    /**
     * {@inheritDoc}
     */
    public function setHistoryRentBoss($history_rent_boss)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHistoryRentBoss', array($history_rent_boss));

        return parent::setHistoryRentBoss($history_rent_boss);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistoryRentBoss()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistoryRentBoss', array());

        return parent::getHistoryRentBoss();
    }

    /**
     * {@inheritDoc}
     */
    public function setReportRent($report_rent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReportRent', array($report_rent));

        return parent::setReportRent($report_rent);
    }

    /**
     * {@inheritDoc}
     */
    public function getReportRent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReportRent', array());

        return parent::getReportRent();
    }

}
